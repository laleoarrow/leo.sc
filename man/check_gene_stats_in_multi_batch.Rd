% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_batch.R
\name{check_gene_stats_in_multi_batch}
\alias{check_gene_stats_in_multi_batch}
\alias{check_gene_avg_in_multi_batch}
\alias{subset_common_gene_in_multi_batch}
\title{Inspection of gene in multi-batch}
\usage{
check_gene_stats_in_multi_batch(srt, batch_col = "Batch", slot = "counts")

check_gene_avg_in_multi_batch(srt, genes, batch_col = "Batch", slot = "counts")

subset_common_gene_in_multi_batch(srt, common_genes, assay = "RNA")
}
\arguments{
\item{srt}{A Seurat object.}

\item{batch_col}{Metadata column indicating batch/sample. Default \code{"Batch"}.}

\item{slot}{Expression slot to inspect: \code{"counts"} for presence; \code{"data"} for averaged expression.}

\item{genes}{Character vector of genes (only for \code{check_gene_avg_in_multi_batch}).}

\item{assay}{Assay to subset. Default \code{"RNA"}.}
}
\value{
\itemize{
\item \code{check_gene_stats_in_multi_batch}: list with a tibble \code{stats} and two
character vectors \code{common}, \code{drop}.
\item \code{check_gene_avg_in_multi_batch}: tibble of mean expression (rows = genes,
cols = batches).
\item \code{subset_common_gene_in_multi_batch}: a Seurat object containing only the
genes shared by all batches.
}
}
\description{
Batch-wise gene statistics checking, average expression, and common-gene subsetting
}
\examples{
\dontrun{
## --------------------------------------------------------------------
## Tutorial: reconcile gene sets across multiple batches
## --------------------------------------------------------------------

# Assume `cd4` is a Seurat object with metadata column "Batch"

# Step 1 – inspect gene overlap/uniqueness across batches
res <- check_gene_stats_in_multi_batch(cd4)  # returns stats, common, drop
res$stats                                    # view the tibble summary

# Step 2 – examine average expression of genes missing from ≥1 batch
avg <- check_gene_avg_in_multi_batch(cd4, res$drop); head(avg); colSums(avg[-1])

# Step 3 – subset the Seurat object to the intersection gene set
cd4 <- subset_common_gene_in_multi_batch(cd4, res$common)
}
}
